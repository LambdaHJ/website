"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[344],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return r?o.createElement(h,i(i({ref:t},c),{},{components:r})):o.createElement(h,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9123:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:1},s="Colocation Profile",p={unversionedId:"user-manuals/colocation-profile",id:"user-manuals/colocation-profile",title:"Colocation Profile",description:"koord-manager has a variety of parameters that can be specified when creating a Custom Resource (CR). In this section, we will walk through all parameters in ClusterColocationProfile.",source:"@site/docs/user-manuals/colocation-profile.md",sourceDirName:"user-manuals",slug:"/user-manuals/colocation-profile",permalink:"/docs/user-manuals/colocation-profile",editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/user-manuals/colocation-profile.md",tags:[],version:"current",lastUpdatedBy:"Li Yi",lastUpdatedAt:1649420711,formattedLastUpdatedAt:"4/8/2022",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"QoS",permalink:"/docs/core-concepts/qos"},next:{title:"Colocation of Spark Jobs",permalink:"/docs/best-practices/colocation-of-spark-jobs"}},c={},u=[{value:"What is ClusterColocationProfile?",id:"what-is-clustercolocationprofile",level:2},{value:"Example",id:"example",level:2},{value:"General Parameters",id:"general-parameters",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"colocation-profile"},"Colocation Profile"),(0,a.kt)("p",null,"koord-manager has a variety of parameters that can be specified when creating a Custom Resource (CR). In this section, we will walk through all parameters in ",(0,a.kt)("inlineCode",{parentName:"p"},"ClusterColocationProfile"),"."),(0,a.kt)("h2",{id:"what-is-clustercolocationprofile"},"What is ClusterColocationProfile?"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ClusterColocationProfile")," is Kubernetes custom resource to configure webhook interception and mutation policy. It is a cluster-scoped resource, so it doesn't work in a particular namespace. We aim to reduce users workload by letting webhook do all the dirty work based on ",(0,a.kt)("inlineCode",{parentName:"p"},"ClusterColocationProfile"),"."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"ClusterColocationProfile")," is a resource with a YAML representation like the one below. Please do edit each parameter to fit your own use cases."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: config.koordinator.sh/v1alpha1\nkind: ClusterColocationProfile\nmetadata:\n  name: colocation-profile-example\nspec:\n  namespaceSelector:\n    matchLabels:\n      koordinator.sh/enable-colocation: "true"\n  selector:\n    matchLabels:\n      sparkoperator.k8s.io/launched-by-spark-operator: "true"\n  qosClass: BE\n  priorityClassName: koord-batch\n  koordinatorPriority: 1000\n  schedulerName: koord-scheduler\n  labels:\n    koordinator.sh/mutated: "true"\n  annotations: \n    koordinator.sh/intercepted: "true"\n  patch:\n    spec:\n      terminationGracePeriodSeconds: 30\n')),(0,a.kt)("h2",{id:"general-parameters"},"General Parameters"),(0,a.kt)("p",null,"If you are not familiar with Kubernetes resources please refer to the page ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/"},"Understanding Kubernetes Objects"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"namespaceSelector"),": decides whether to mutate/validate Pods if the namespace matches the selector. Default to the empty LabelSelector,  which will match everything.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"selector"),": decides whether to mutate/validate Pods if the Pod matches the selector. Default to the empty LabelSelector, which will match everything.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"qosClass")," (",(0,a.kt)("em",{parentName:"p"},"required"),"): describes the type of Koordinator QoS that the Pod is running. The value will be injected into Pod as label koordinator.sh/qosClass. Options are ",(0,a.kt)("inlineCode",{parentName:"p"},"LSE"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"LSR"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"LS"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"BE"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"SYSTEM"),". For more information, please check ",(0,a.kt)("a",{parentName:"p",href:"../core-concepts/qos"},"here"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"priorityClassName")," (",(0,a.kt)("em",{parentName:"p"},"required"),"): the priorityClassName and the priority value defined in PriorityClass will be injected into the Pod. Options are ",(0,a.kt)("inlineCode",{parentName:"p"},"koordinator-prod"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"koordinator-mid"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"koordinator-batch"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"koordinator-free"),". For more information, please check ",(0,a.kt)("a",{parentName:"p",href:"../core-concepts/priority"},"here"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"koordinatorPriority"),": defines the Pod sub-priority in Koordinator. The priority value will be injected into Pod as label koordinator.sh/priority. Various Koordinator components determine the priority of the Pod in the Koordinator through KoordinatorPriority and the priority value in PriorityClassName. Higher the value, higher the priority.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"labels"),": describes the k/v pair that needs to inject into ",(0,a.kt)("inlineCode",{parentName:"p"},"Pod.Labels"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"annotations"),": describes the k/v pair that needs to inject into ",(0,a.kt)("inlineCode",{parentName:"p"},"Pod.Annotations"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"schedulerName"),": if specified, the pod will be dispatched by specified scheduler.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"patch"),": indicates Pod Template patching that user would like to inject into the Pod."))))}m.isMDXComponent=!0}}]);